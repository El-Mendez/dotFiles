"" Regular config
set scrolloff=5
set incsearch
map Q gq

"" Plugins
if has("unix")
	call plug#begin('~/.config/nvim/plugged')
else
	call plug#begin('~/AppData/Local/nvim/plugged')
endif

Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'preservim/nerdtree'
Plug 'tommcdo/vim-exchange'

set visualbell
set relativenumber
set number
set incsearch

if !has("ide")
	Plug 'jiangmiao/auto-pairs'
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	Plug 'Yggdroot/indentLine'
	Plug 'ryanoasis/vim-devicons'
	let g:airline_theme='onedark'
	let g:airline_left_sep = ''
	let g:airline_right_sep = ''
	let NERDTreeShowHidden=1
	colorscheme pablo
endif


call plug#end()

"" General Settings
imap kj <Esc>
vmap kj <Esc>
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz
nnoremap ZS :w<cr>

set timeoutlen=400

let mapleader = " "
nnoremap go :NERDTree<CR>

"" Para usar el clipboard
nnoremap <leader>y \"+y
vnoremap <leader>y \"+y
nnoremap <leader>p \"+p

"" Acciones de IDE
if has('ide')
	"" Movimiento
	nmap <leader>h <Action>(PreviousTab)
	nmap <leader>l <Action>(NextTab)

	nmap <leader>q <Action>(CloseEditor)
	nmap <leader>Q <Action>(CloseActiveTab)

	nmap <leader>o <Action>(GotoDeclaration)
	nmap <leader>k <Action>(QuickJavaDoc)

	"" Para errores
	nmap <leader>e <Action>(ShowErrorDescription)
	nmap ge <Action>(GotoNextError)
	nmap gE <Action>(GotoPreviousError)
	nmap <leader>cw <Action>(RenameElement)

	"" Para debug
	nmap <leader>D <Action>(Debug)
	nmap <leader>d <Action>(ToggleLineBreakpoint)

	nmap <leader>r <Action>(Run)
endif

